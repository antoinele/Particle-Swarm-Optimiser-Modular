#
# Heavily based off of Linux's KBuild
#

src = $(obj)

PHONY := __build
__build:

obj-y :=
targets :=
subdir-y :=
subdir-obj-y :=

subdir-ccflags-y :=

# load directory's Makefile
include $(src)/Makefile

include scripts/Makefile.include
include scripts/Makefile.lib

targets += $(real-objs-y)
targets += $(extra-y) $(MAKECMDGOALS)

$(sort $(subdir-obj-y)): $(subdir-ym) ;

builtin-target := $(obj)/built-in.o

targets += $(buildin-target)

$(builtin-target): $(obj-y) FORCE
	$(LD) $(LDFLAGS) -r -o $@ $(filter $(obj-y), $^)

__build: $(builtin-target)

PHONY += $(subdir-ym)
$(subdir-ym):
	$(MAKE) $(build)=$@

$(obj)/%.o: $(src)/%.c
	$(CC) -c $(CFLAGS) $< -o $@

$(obj)/%.o: $(src)/%.cpp
	$(CXX) -c $(CXXFLAGS) $< -o $@

PHONY += FORCE
FORCE:

.PHONY: $(PHONY)